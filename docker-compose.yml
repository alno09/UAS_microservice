version: '3.8'

services:
  rabbitMQ:
    image: 'rabbitmq:3-management'
    ports:
      - 5672:5672
      - 15672:15672

  catalog-service:
    build:
      context: ./catalog
      dockerfile: Dockerfile
    container_name: catalog-service
    ports:
      - 5001:5001
    env_file:
      - ./catalog/.env
    volumes:
      - .:/app
    depends_on:
      - pg-catalog

  customer-service:
    build:
      context: ./customer
      dockerfile: Dockerfile
    container_name: customer-service
    ports:
      - 5002:5002
    env_file:
      - ./customer/.env
    volumes:
      - .:/app
    depends_on:
      - pg-customer

  order-service:
    build:
      context: ./order
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - 5003:5003
    env_file:
      - ./order/.env
    volumes:
      - .:/app
    depends_on:
      - pg-order
  
  pg-catalog:
    image: postgres:16-alpine
    container_name: pg-catalog
    env_file:
      - path: /catalog/.env
    environment:
      - POSTGRES_USER=${DB_USER_1}
      - POSTGRES_PASSWORD=${DB_PASSWORD_1}
      - POSTGRES_DB=${DB_NAME_1}
    ports:
      - 5432:5432
    volumes:
      - pg-catalog:/var/lib/postgresql/data/catalog

  pg-customer:
    image: postgres:16-alpine
    container_name: pg-customer
    env_file:
      - path: /customer/.env
    environment:
      - POSTGRES_USER=${DB_USER_2}
      - POSTGRES_PASSWORD=${DB_PASSWORD_2}
      - POSTGRES_DB=${DB_NAME_2}
    ports:
      - 5433:5432
    volumes:
      - pg-customer:/var/lib/postgresql/data/customer
  
  pg-order:
    image: postgres:16-alpine
    container_name: pg-order
    env_file:
      - path: /order/.env
    environment:
      - POSTGRES_USER=${DB_USER_3}
      - POSTGRES_PASSWORD=${DB_PASSWORD_3}
      - POSTGRES_DB=${DB_NAME_3}
    ports:
      - 5434:5432
    volumes:
      - pg-order:/var/lib/postgresql/data/order

volumes:
  pg-catalog:
  pg-customer:
  pg-order: